SIZE 100

CYCLE 1000
CYCLES 501

range.0 k;0:10|1
#range.1 file;0:72302|1
range.1 file;0:10|1
#range.1 file;0,1,3,9,10
#range.1 file;10
#range.2 stepSize;1000,2000,5000,10000,25000

MINDELAY 20
MAXDELAY 70
DROP 0

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

protocol.urt UniformRandomTransport
{
	mindelay (CYCLE*MINDELAY)/100
	maxdelay (CYCLE*MAXDELAY)/100
}

protocol.tr UnreliableTransport
{
	transport urt
	drop DROP
}

protocol.idle IdleProtocolSN

protocol.gossip CyclonSN
{
	cache 50
	l 10
	idle idle
	step CYCLE
	stepSize 500
	transport tr
	
	#0 for never run the init class
	emptyCycles 0
	init.wire SNNodeInit
	{
		idle idle
		linkable gossip
		n 20
	}
	
	period CYCLE
}

#protocol.news NewsManager
#{
#	idle idle
#	transport tr
#	period period
#	step CYCLE
#}

#protocol.epid EpidemicNews
#{
#	protocol.gossip gossip
#	protocol.idle idle
#	protocol.news_manager news
#	hash true
#}

#protocol.epidemicManager EDEpidemicManagerMD5
#{
#	protocol epid
#	transport tr
#	period CYCLE
#	step CYCLE
#	
#	startTime CYCLE*140
#}
#
#control.addNews AddNews
#{
#	protocol.newsManager news
#	protocol.idle idle
#	protocol.gossip gossip
#	
#	friendshipNo 0
#	statusChangeNo 1
#	commentNo 0
#	
#	step CYCLE
#	
#	from CYCLE*150
#	until CYCLE*151
#
#}

init.sch CDScheduler
{
	protocol gossip
	#randstart
}

network.node SNNode

init.prepareNet InitSocialNetwork
{
	linkable idle
	directory /home/zando/uni/specialistica/tesi/documentazione/res/
	fileBegin Res
	fileNo file
}

init.wireNet WireNet
{
	idle idle
	linkable gossip
	n 20
}

#control.dynamic OscillatingSocialNetwork
#{
#	minsize 2
#	period 20000
#
#	init.wire SNNodeInit
#	{
#		idle idle
#		linkable gossip
#		n 5
#	}
#	
#	step CYCLE
#	from 50000
#}

control.weak WeakConnectivityObserver
{
	protocol gossip
	stats

	step CYCLE
}

control.degree example.sn.control.graphob.DegreeObserver
{
	protocol gossip
	idle idle
	step CYCLE
	#from 350000
}

#control.dissObs DisseminationObserver
#{
#	protocol.news news
#	protocol.gossip gossip
#	protocol.idle idle
#	step CYCLE
#	from CYCLE*150
#}