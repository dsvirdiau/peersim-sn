# Configuration file to run Peersim SN

# network size
#SIZE 72303
SIZE 1000
# parameters of periodic execution
CYCLES 100
CYCLE SIZE*10000
# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 20
MAXDELAY 80
DROP 0

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

protocol.urt UniformRandomTransport
{
	mindelay (CYCLE*MINDELAY)/100
	maxdelay (CYCLE*MAXDELAY)/100
}

protocol.tr UnreliableTransport
{
	transport urt
	drop DROP
}

protocol.idle IdleProtocol

protocol.ncast NewscastED
{
	cache 30
	ff_communication false
	idle_protocol idle
	step CYCLE
}

protocol.epid EpidemicNews
{
	protocol.network_manager ncast
	protocol.news_manager news
	hash true
}

protocol.epidemicM EDEpidemicManagerMD5
{
	protocol epid
	transport tr
	period CYCLE
#	step CYCLE
}

protocol.news NewsManager
{
	protocol.idle idle
	protocol.network_manager ncast
	transport tr
	period period
	step CYCLE
}

control.addNews AddNews
{
	protocol.newsManager news
	protocol.idle idle
	protocol.newscast ncast
	friendshipNo 0
	statusChangeNo 1
	step CYCLE
	endtime 10000000
}

control.obs example.sn.graphob.ConnectivityObserver
{
	protocol ncast
	type scc
	step CYCLE
	stats
}

control.obsD DisseminationObserver
{
	protocol.news news
	protocol.newscast ncast
	protocol.idle idle
	step CYCLE
}

init.sch CDScheduler
{
	protocol ncast
	randstart
}

#init.prepareNet WireWS
#{
#	k 50
#	protocol ncast
#	beta 0
#}

control.dynamicsn DynamicSocialNetwork
{
	minsize 960
	maxsize 1000
	step CYCLE
}

init.rnd WireKOut
{
	protocol ncast
	k 20
}

network.node SNNode

#init.prepareNet InitSocialNetwork
#{
#	idleProtocol idle
#	file /home/zando/uni/specialistica/tesi/documentazione/Amici.txt
#	id /home/zando/uni/specialistica/tesi/documentazione/Nodes.txt
#}